# Executes R CMD check will run the check for both windows and ubuntu latest on the newest R release.

on:
  # Executable from a parent workflow.
  workflow_call:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    # Setup of subjobs or here which os/R versions needs to be tested.
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: macos-latest,    r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}
          # - {os: ubuntu-latest,   r: 'oldrel-2'}
          # - {os: ubuntu-latest,   r: 'oldrel-3'}
          # - {os: ubuntu-latest,   r: 'oldrel-4'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Setup pandoc which is required to built doc for pacakge
      - uses: r-lib/actions/setup-pandoc@v2

      # Setup R env using the R version specified under strategy above.
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          #http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Install package dependencies
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # Run the R CMD check - will upload results as an artifact.
      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran")'
          upload-snapshots: true
          error-on: '"error"'
          check-dir: '"check"'
          upload-results: true
